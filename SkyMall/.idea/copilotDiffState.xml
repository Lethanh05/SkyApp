<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/api/store/voucher/create.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/api/store/voucher/create.php" />
              <option name="updatedContent" value="&lt;?php&#10;require_once __DIR__ . '/../../auth/_bootstrap.php';&#10;require_once __DIR__ . '/../../_require_store.php';&#10;&#10;// Validate required fields&#10;$code = strtoupper(trim($_POST['code'] ?? ''));&#10;$type = trim($_POST['type'] ?? '');&#10;$value = isset($_POST['value']) ? (float)$_POST['value'] : 0;&#10;&#10;if ($code === '' || !in_array($type, ['percent', 'amount']) || $value &lt;= 0) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Invalid required fields&quot;], 400);&#10;}&#10;&#10;// Validate code format (chỉ cho phép chữ, số, gạch dưới)&#10;if (!preg_match('/^[A-Z0-9_]{3,20}$/', $code)) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Code must be 3-20 characters, uppercase letters, numbers, underscore only&quot;], 400);&#10;}&#10;&#10;// Validate percentage&#10;if ($type === 'percent' &amp;&amp; $value &gt; 100) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Percentage cannot exceed 100%&quot;], 400);&#10;}&#10;&#10;// Optional fields&#10;$min_order_value = isset($_POST['min_order_value']) ? (float)$_POST['min_order_value'] : 0;&#10;$start_date = trim($_POST['start_date'] ?? '');&#10;$end_date = trim($_POST['end_date'] ?? '');&#10;$usage_limit = isset($_POST['usage_limit']) &amp;&amp; $_POST['usage_limit'] !== '' ? (int)$_POST['usage_limit'] : null;&#10;$per_user_limit = isset($_POST['per_user_limit']) ? max(1, (int)$_POST['per_user_limit']) : 1;&#10;$description = trim($_POST['description'] ?? '');&#10;&#10;// Validate dates&#10;if ($start_date === '') $start_date = date('Y-m-d');&#10;if ($end_date === '') {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;End date is required&quot;], 400);&#10;}&#10;&#10;if (strtotime($end_date) &lt;= strtotime($start_date)) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;End date must be after start date&quot;], 400);&#10;}&#10;&#10;// Validate usage limits&#10;if ($usage_limit !== null &amp;&amp; $usage_limit &lt;= 0) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Usage limit must be positive&quot;], 400);&#10;}&#10;&#10;try {&#10;    // Check if code already exists&#10;    $checkSql = &quot;SELECT id FROM Voucher WHERE code = ? LIMIT 1&quot;;&#10;    $st = $mysqli-&gt;prepare($checkSql);&#10;    $st-&gt;bind_param(&quot;s&quot;, $code);&#10;    $st-&gt;execute();&#10;    &#10;    if ($st-&gt;get_result()-&gt;fetch_row()) {&#10;        json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Voucher code already exists&quot;], 409);&#10;    }&#10;&#10;    // Insert new voucher (chỉ dùng các cột có trong bảng)&#10;    $sql = &quot;INSERT INTO Voucher (code, type, value, min_order_value, start_date, end_date, usage_limit, per_user_limit, description) &#10;            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)&quot;;&#10;&#10;    $st = $mysqli-&gt;prepare($sql);&#10;    $st-&gt;bind_param(&quot;ssddssisi&quot;, $code, $type, $value, $min_order_value, $start_date, $end_date, $usage_limit, $per_user_limit, $description);&#10;&#10;    if (!$st-&gt;execute()) {&#10;        throw new Exception(&quot;Failed to create voucher: &quot; . $st-&gt;error);&#10;    }&#10;&#10;    $voucherId = $mysqli-&gt;insert_id;&#10;&#10;    json([&#10;        &quot;success&quot; =&gt; true,&#10;        &quot;data&quot; =&gt; [&#10;            &quot;id&quot; =&gt; $voucherId,&#10;            &quot;code&quot; =&gt; $code,&#10;            &quot;message&quot; =&gt; &quot;Voucher created successfully&quot;&#10;        ]&#10;    ]);&#10;&#10;} catch (Exception $e) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;$e-&gt;getMessage()], 500);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/api/store/voucher/update.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/api/store/voucher/update.php" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;require_once __DIR__ . '/../../auth/_bootstrap.php';&#10;require_once __DIR__ . '/../../_require_store.php';&#10;&#10;$id = (int)($_POST['id'] ?? 0);&#10;if ($id &lt;= 0) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Invalid voucher ID&quot;], 400);&#10;}&#10;&#10;// Get current voucher&#10;$checkSql = &quot;SELECT * FROM Voucher WHERE id = ? LIMIT 1&quot;;&#10;$st = $mysqli-&gt;prepare($checkSql);&#10;$st-&gt;bind_param(&quot;i&quot;, $id);&#10;$st-&gt;execute();&#10;$currentVoucher = $st-&gt;get_result()-&gt;fetch_assoc();&#10;&#10;if (!$currentVoucher) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Voucher not found&quot;], 404);&#10;}&#10;&#10;// Check if voucher has been used&#10;$usageSql = &quot;SELECT COUNT(*) as usage_count FROM VoucherUsage WHERE voucherId = ?&quot;;&#10;$st = $mysqli-&gt;prepare($usageSql);&#10;$st-&gt;bind_param(&quot;i&quot;, $id);&#10;$st-&gt;execute();&#10;$usageCount = $st-&gt;get_result()-&gt;fetch_assoc()['usage_count'];&#10;&#10;$hasBeenUsed = $usageCount &gt; 0;&#10;&#10;// Validate fields&#10;$code = strtoupper(trim($_POST['code'] ?? $currentVoucher['code']));&#10;$type = trim($_POST['type'] ?? $currentVoucher['type']);&#10;$value = isset($_POST['value']) ? (float)$_POST['value'] : (float)$currentVoucher['value'];&#10;&#10;// If voucher has been used, don't allow changing core properties&#10;if ($hasBeenUsed) {&#10;    if ($code !== $currentVoucher['code'] || $type !== $currentVoucher['type'] || $value != $currentVoucher['value']) {&#10;        json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Cannot modify code, type, or value of used voucher&quot;], 400);&#10;    }&#10;}&#10;&#10;// Validate code format&#10;if (!preg_match('/^[A-Z0-9_]{3,20}$/', $code)) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Code must be 3-20 characters, uppercase letters, numbers, underscore only&quot;], 400);&#10;}&#10;&#10;if (!in_array($type, ['percent', 'amount']) || $value &lt;= 0) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Invalid type or value&quot;], 400);&#10;}&#10;&#10;if ($type === 'percent' &amp;&amp; $value &gt; 100) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Percentage cannot exceed 100%&quot;], 400);&#10;}&#10;&#10;// Other fields&#10;$min_order_value = isset($_POST['min_order_value']) ? (float)$_POST['min_order_value'] : (float)$currentVoucher['min_order_value'];&#10;$start_date = trim($_POST['start_date'] ?? $currentVoucher['start_date']);&#10;$end_date = trim($_POST['end_date'] ?? $currentVoucher['end_date']);&#10;$usage_limit = isset($_POST['usage_limit']) &amp;&amp; $_POST['usage_limit'] !== '' ? (int)$_POST['usage_limit'] : $currentVoucher['usage_limit'];&#10;$per_user_limit = isset($_POST['per_user_limit']) ? max(1, (int)$_POST['per_user_limit']) : (int)$currentVoucher['per_user_limit'];&#10;$description = trim($_POST['description'] ?? $currentVoucher['description'] ?? '');&#10;&#10;// Validate dates&#10;if (strtotime($end_date) &lt;= strtotime($start_date)) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;End date must be after start date&quot;], 400);&#10;}&#10;&#10;// Validate usage limits&#10;if ($usage_limit !== null &amp;&amp; $usage_limit &lt;= 0) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Usage limit must be positive&quot;], 400);&#10;}&#10;&#10;// If voucher has been used, usage_limit cannot be less than current usage&#10;if ($hasBeenUsed &amp;&amp; $usage_limit !== null &amp;&amp; $usage_limit &lt; $usageCount) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Usage limit cannot be less than current usage ({$usageCount})&quot;], 400);&#10;}&#10;&#10;try {&#10;    // Check code uniqueness (if changed)&#10;    if ($code !== $currentVoucher['code']) {&#10;        $checkSql = &quot;SELECT id FROM Voucher WHERE code = ? AND id != ? LIMIT 1&quot;;&#10;        $st = $mysqli-&gt;prepare($checkSql);&#10;        $st-&gt;bind_param(&quot;si&quot;, $code, $id);&#10;        $st-&gt;execute();&#10;        &#10;        if ($st-&gt;get_result()-&gt;fetch_row()) {&#10;            json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;Voucher code already exists&quot;], 409);&#10;        }&#10;    }&#10;&#10;    // Update voucher (chỉ dùng các cột có trong bảng)&#10;    $sql = &quot;UPDATE Voucher SET &#10;                code = ?, &#10;                type = ?, &#10;                value = ?, &#10;                min_order_value = ?, &#10;                start_date = ?, &#10;                end_date = ?, &#10;                usage_limit = ?, &#10;                per_user_limit = ?, &#10;                description = ?&#10;            WHERE id = ?&quot;;&#10;&#10;    $st = $mysqli-&gt;prepare($sql);&#10;    $st-&gt;bind_param(&quot;ssddssisii&quot;, $code, $type, $value, $min_order_value, $start_date, $end_date, $usage_limit, $per_user_limit, $description, $id);&#10;&#10;    if (!$st-&gt;execute()) {&#10;        throw new Exception(&quot;Failed to update voucher: &quot; . $st-&gt;error);&#10;    }&#10;&#10;    if ($st-&gt;affected_rows === 0) {&#10;        json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;&quot;No changes made&quot;], 400);&#10;    }&#10;&#10;    json([&#10;        &quot;success&quot; =&gt; true,&#10;        &quot;message&quot; =&gt; &quot;Voucher updated successfully&quot;,&#10;        &quot;data&quot; =&gt; [&#10;            &quot;id&quot; =&gt; $id,&#10;            &quot;code&quot; =&gt; $code,&#10;            &quot;has_been_used&quot; =&gt; $hasBeenUsed,&#10;            &quot;usage_count&quot; =&gt; $usageCount&#10;        ]&#10;    ]);&#10;&#10;} catch (Exception $e) {&#10;    json([&quot;success&quot;=&gt;false,&quot;error&quot;=&gt;$e-&gt;getMessage()], 500);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/model/Product.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/model/Product.java" />
              <option name="originalContent" value="package com.example.skymall.data.model;&#10;&#10;import com.google.gson.annotations.SerializedName;&#10;&#10;import java.io.Serializable;&#10;&#10;public class Product implements Serializable {&#10;    public int id;&#10;    public String name;&#10;    public String description;&#10;    public double price;&#10;    public String image;&#10;    public int quantity;&#10;    public int categoryId;&#10;    public int discountPercentage; // For flash sale&#10;    public int soldCount; // For popularity sorting&#10;    public String createdAt;&#10;    public String updatedAt;&#10;    @SerializedName(&quot;img&quot;)&#10;    public String img; // Trường nhận dữ liệu từ API&#10;&#10;    public Product() {}&#10;&#10;    public Product(int id, String name, String description, double price, String image, String img, int quantity, int categoryId) {&#10;        this.id = id;&#10;        this.name = name;&#10;        this.description = description;&#10;        this.price = price;&#10;        this.image = image;&#10;        this.img = img;&#10;        this.quantity = quantity;&#10;        this.categoryId = categoryId;&#10;        this.discountPercentage = 0;&#10;        this.soldCount = 0;&#10;    }&#10;&#10;    public double getDiscountedPrice() {&#10;        if (discountPercentage &gt; 0) {&#10;            return price * (100 - discountPercentage) / 100.0;&#10;        }&#10;        return price;&#10;    }&#10;&#10;    public boolean isInStock() {&#10;        return quantity &gt; 0;&#10;    }&#10;&#10;    public boolean hasDiscount() {&#10;        return discountPercentage &gt; 0;&#10;    }&#10;&#10;    private static final String BASE = &quot;https://lequangthanh.click&quot;;&#10;&#10;    public static String normalizeImage(String img) {&#10;        if (img == null) return null;&#10;        if (img.startsWith(&quot;http://&quot;) || img.startsWith(&quot;https://&quot;)) return img;&#10;        if (img.isEmpty() || &quot;null&quot;.equalsIgnoreCase(img)) return null;&#10;        if (img.startsWith(&quot;http://&quot;) || img.startsWith(&quot;https://&quot;)) return img;&#10;        if (img.startsWith(&quot;/&quot;)) return BASE + img;&#10;&#10;&#10;" />
              <option name="updatedContent" value="package com.example.skymall.data.model;&#10;&#10;import com.google.gson.annotations.SerializedName;&#10;&#10;import java.io.Serializable;&#10;&#10;public class Product implements Serializable {&#10;    public int id;&#10;    public String name;&#10;    public String description;&#10;    public double price;&#10;    public String image;&#10;    public int quantity;&#10;    public int categoryId;&#10;    public int discountPercentage; // For flash sale&#10;    public int soldCount; // For popularity sorting&#10;    public String createdAt;&#10;    public String updatedAt;&#10;    @SerializedName(&quot;img&quot;)&#10;    public String img; // Trường nhận dữ liệu từ API&#10;&#10;    public Product() {}&#10;&#10;    public Product(int id, String name, String description, double price, String image, String img, int quantity, int categoryId) {&#10;        this.id = id;&#10;        this.name = name;&#10;        this.description = description;&#10;        this.price = price;&#10;        this.image = image;&#10;        this.img = img;&#10;        this.quantity = quantity;&#10;        this.categoryId = categoryId;&#10;        this.discountPercentage = 0;&#10;        this.soldCount = 0;&#10;    }&#10;&#10;    public double getDiscountedPrice() {&#10;        if (discountPercentage &gt; 0) {&#10;            return price * (100 - discountPercentage) / 100.0;&#10;        }&#10;        return price;&#10;    }&#10;&#10;    public boolean isInStock() {&#10;        return quantity &gt; 0;&#10;    }&#10;&#10;    public boolean hasDiscount() {&#10;        return discountPercentage &gt; 0;&#10;    }&#10;&#10;    private static final String BASE = &quot;https://lequangthanh.click&quot;;&#10;&#10;    public static String normalizeImage(String img) {&#10;        if (img == null || img.trim().isEmpty() || &quot;null&quot;.equalsIgnoreCase(img.trim())) {&#10;            return null;&#10;        }&#10;        img = img.trim();&#10;        if (img.startsWith(&quot;http://&quot;) || img.startsWith(&quot;https://&quot;)) {&#10;            return img;&#10;        }&#10;        if (img.startsWith(&quot;/&quot;)) {&#10;            return BASE + img;&#10;        }&#10;        return BASE + &quot;/&quot; + img;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/remote/DTO/ProductListResp.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/remote/DTO/ProductListResp.java" />
              <option name="originalContent" value="package com.example.skymall.data.remote.DTO;&#10;&#10;import com.example.skymall.data.model.Product;&#10;import java.util.List;&#10;import android.util.Log;&#10;import com.google.gson.Gson;&#10;&#10;public class ProductListResp {&#10;    public boolean success;&#10;    public List&lt;Product&gt; data;&#10;    public int page;&#10;    public int limit;&#10;&#10;    public ProductListResp() {&#10;        Log.d(&quot;ProductListResp&quot;, &quot;Raw JSON response: &quot; + new Gson().toJson(this));&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.skymall.data.remote.DTO;&#13;&#10;&#13;&#10;import com.example.skymall.data.model.Product;&#13;&#10;import java.util.List;&#13;&#10;import android.util.Log;&#13;&#10;import com.google.gson.Gson;&#13;&#10;&#13;&#10;public class ProductListResp {&#13;&#10;    public boolean success;&#13;&#10;    public List&lt;Product&gt; data;&#13;&#10;    public int page;&#13;&#10;    public int limit;&#13;&#10;    public int total;&#13;&#10;    public String error;&#13;&#10;&#13;&#10;    public ProductListResp() {&#13;&#10;        Log.d(&quot;ProductListResp&quot;, &quot;Raw JSON response: &quot; + new Gson().toJson(this));&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/repository/CustomerAddressRepository.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/skymall/data/repository/CustomerAddressRepository.java" />
              <option name="updatedContent" value="package com.example.skymall.data.repository;&#10;&#10;import android.content.Context;&#10;import com.example.skymall.data.remote.ApiClient;&#10;import com.example.skymall.data.remote.ApiService;&#10;import com.example.skymall.data.remote.DTO.AddressCreateResp;&#10;import com.example.skymall.data.remote.DTO.AddressListResp;&#10;import com.example.skymall.data.remote.DTO.BaseResp;&#10;&#10;import retrofit2.Call;&#10;import retrofit2.Callback;&#10;import retrofit2.Response;&#10;&#10;public class CustomerAddressRepository {&#10;    private ApiService apiService;&#10;    &#10;    public CustomerAddressRepository(Context context) {&#10;        this.apiService = ApiClient.create(context);&#10;    }&#10;    &#10;    public interface CreateAddressCallback {&#10;        void onSuccess(int addressId);&#10;        void onError(String error);&#10;    }&#10;    &#10;    public interface AddressListCallback {&#10;        void onSuccess(AddressListResp response);&#10;        void onError(String error);&#10;    }&#10;    &#10;    public interface UpdateDeleteCallback {&#10;        void onSuccess();&#10;        void onError(String error);&#10;    }&#10;    &#10;    public void createAddress(String name, String phone, String addressLine, String city, &#10;                             String district, int isDefault, CreateAddressCallback callback) {&#10;        Call&lt;AddressCreateResp&gt; call = apiService.createAddress(name, phone, addressLine, city, district, isDefault);&#10;        call.enqueue(new Callback&lt;AddressCreateResp&gt;() {&#10;            @Override&#10;            public void onResponse(Call&lt;AddressCreateResp&gt; call, Response&lt;AddressCreateResp&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    AddressCreateResp resp = response.body();&#10;                    if (resp.success) {&#10;                        callback.onSuccess(resp.id);&#10;                    } else {&#10;                        callback.onError(resp.error != null ? resp.error : &quot;Thêm địa chỉ thất bại&quot;);&#10;                    }&#10;                } else {&#10;                    callback.onError(&quot;Lỗi kết nối server&quot;);&#10;                }&#10;            }&#10;            &#10;            @Override&#10;            public void onFailure(Call&lt;AddressCreateResp&gt; call, Throwable t) {&#10;                callback.onError(&quot;Lỗi mạng: &quot; + t.getMessage());&#10;            }&#10;        });&#10;    }&#10;    &#10;    public void getAddresses(AddressListCallback callback) {&#10;        Call&lt;AddressListResp&gt; call = apiService.getAddresses();&#10;        call.enqueue(new Callback&lt;AddressListResp&gt;() {&#10;            @Override&#10;            public void onResponse(Call&lt;AddressListResp&gt; call, Response&lt;AddressListResp&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    AddressListResp resp = response.body();&#10;                    if (resp.success) {&#10;                        callback.onSuccess(resp);&#10;                    } else {&#10;                        callback.onError(resp.error != null ? resp.error : &quot;Không thể tải danh sách địa chỉ&quot;);&#10;                    }&#10;                } else {&#10;                    callback.onError(&quot;Lỗi kết nối server&quot;);&#10;                }&#10;            }&#10;            &#10;            @Override&#10;            public void onFailure(Call&lt;AddressListResp&gt; call, Throwable t) {&#10;                callback.onError(&quot;Lỗi mạng: &quot; + t.getMessage());&#10;            }&#10;        });&#10;    }&#10;    &#10;    public void updateAddress(int id, String name, String phone, String addressLine, String city,&#10;                             String district, int isDefault, UpdateDeleteCallback callback) {&#10;        Call&lt;BaseResp&gt; call = apiService.updateAddress(id, name, phone, addressLine, city, district, isDefault);&#10;        call.enqueue(new Callback&lt;BaseResp&gt;() {&#10;            @Override&#10;            public void onResponse(Call&lt;BaseResp&gt; call, Response&lt;BaseResp&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    callback.onSuccess();&#10;                } else {&#10;                    callback.onError(&quot;Cập nhật địa chỉ thất bại&quot;);&#10;                }&#10;            }&#10;            &#10;            @Override&#10;            public void onFailure(Call&lt;BaseResp&gt; call, Throwable t) {&#10;                callback.onError(&quot;Lỗi mạng: &quot; + t.getMessage());&#10;            }&#10;        });&#10;    }&#10;    &#10;    public void deleteAddress(int id, UpdateDeleteCallback callback) {&#10;        Call&lt;BaseResp&gt; call = apiService.deleteAddress(id);&#10;        call.enqueue(new Callback&lt;BaseResp&gt;() {&#10;            @Override&#10;            public void onResponse(Call&lt;BaseResp&gt; call, Response&lt;BaseResp&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    callback.onSuccess();&#10;                } else {&#10;                    callback.onError(&quot;Xóa địa chỉ thất bại&quot;);&#10;                }&#10;            }&#10;            &#10;            @Override&#10;            public void onFailure(Call&lt;BaseResp&gt; call, Throwable t) {&#10;                callback.onError(&quot;Lỗi mạng: &quot; + t.getMessage());&#10;            }&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/skymall/ui/PaymentActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/skymall/ui/PaymentActivity.java" />
              <option name="updatedContent" value="package com.example.skymall.ui;&#10;&#10;import android.os.Bundle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import com.example.skymall.R;&#10;&#10;public class PaymentActivity extends AppCompatActivity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_payment);&#10;        // TODO: Hiển thị thông tin thanh toán, nhận dữ liệu từ giỏ hàng nếu cần&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/skymall/ui/voucher/VoucherSelectAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/skymall/ui/voucher/VoucherSelectAdapter.java" />
              <option name="originalContent" value="package com.example.skymall.ui.voucher;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.skymall.R;&#10;import com.example.skymall.data.model.Voucher;&#10;import com.example.skymall.utils.MoneyFmt;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class VoucherSelectAdapter extends RecyclerView.Adapter&lt;VoucherSelectAdapter.VoucherViewHolder&gt; {&#10;&#10;    private List&lt;Voucher&gt; vouchers;&#10;    private Voucher selectedVoucher;&#10;    private OnVoucherClickListener listener;&#10;&#10;    public interface OnVoucherClickListener {&#10;        void onVoucherClick(Voucher voucher);&#10;    }&#10;&#10;    public VoucherSelectAdapter(List&lt;Voucher&gt; vouchers, Voucher selectedVoucher, OnVoucherClickListener listener) {&#10;        this.vouchers = vouchers;&#10;        this.selectedVoucher = selectedVoucher;&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void updateVouchers(List&lt;Voucher&gt; newVouchers) {&#10;        this.vouchers.clear();&#10;        this.vouchers.addAll(newVouchers);&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public VoucherViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_voucher_select, parent, false);&#10;        return new VoucherViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull VoucherViewHolder holder, int position) {&#10;        Voucher voucher = vouchers.get(position);&#10;&#10;        holder.tvDescription.setText(voucher.description);&#10;&#10;        // Format discount text&#10;        if (&quot;percentage&quot;.equals(voucher.discountType)) {&#10;            holder.tvDiscount.setText(&quot;Giảm &quot; + (int)voucher.discountValue + &quot;%&quot;);&#10;            if (voucher.maxDiscountAmount &gt; 0) {&#10;                holder.tvMaxDiscount.setText(&quot;Tối đa &quot; + MoneyFmt.format(voucher.maxDiscountAmount));&#10;                holder.tvMaxDiscount.setVisibility(View.VISIBLE);&#10;            } else {&#10;                holder.tvMaxDiscount.setVisibility(View.GONE);&#10;            }&#10;        } else {&#10;            holder.tvDiscount.setText(&quot;Giảm &quot; + MoneyFmt.format(voucher.discountValue));&#10;            holder.tvMaxDiscount.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Format expiry date&#10;        try {&#10;            SimpleDateFormat inputFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.getDefault());&#10;            SimpleDateFormat outputFormat = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#10;            Date expiryDate = inputFormat.parse(voucher.expiryDate);&#10;            holder.tvExpiry.setText(&quot;HSD: &quot; + outputFormat.format(expiryDate));&#10;        } catch (Exception e) {&#10;            holder.tvExpiry.setText(&quot;HSD: &quot; + voucher.expiryDate);&#10;        }&#10;&#10;        // Set minimum order text&#10;        if (voucher.minOrderAmount &gt; 0) {&#10;            holder.tvMinOrder.setText(&quot;Đơn tối thiểu &quot; + MoneyFmt.format(voucher.minOrderAmount));&#10;            holder.tvMinOrder.setVisibility(View.VISIBLE);&#10;        } else {&#10;            holder.tvMinOrder.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Hiển thị ảnh voucher nếu có&#10;        // Giả sử bạn đã thêm ImageView vào layout item_voucher_select.xml với id là imgVoucher&#10;        if (holder.imgVoucher != null) {&#10;            // Nếu Voucher có trường image, lấy link ảnh&#10;            String imgUrl = voucher.image;&#10;            if (imgUrl != null &amp;&amp; !imgUrl.isEmpty() &amp;&amp; !&quot;null&quot;.equals(imgUrl)) {&#10;                if (!imgUrl.startsWith(&quot;http&quot;)) {&#10;                    imgUrl = &quot;https://lequangthanh.click&quot; + imgUrl;&#10;                }&#10;                // Load ảnh bằng Picasso&#10;                com.squareup.picasso.Picasso.get().load(imgUrl).into(holder.imgVoucher);&#10;            } else {&#10;                // Sử dụng hình mặc định có sẵn trong Android: ic_launcher&#10;                holder.imgVoucher.setImageResource(R.mipmap.ic_launcher); // hình mặc định&#10;            }&#10;        }&#10;&#10;        // Set selection state&#10;        boolean isSelected = selectedVoucher != null &amp;&amp; selectedVoucher.id == voucher.id;&#10;        holder.radioButton.setChecked(isSelected);&#10;&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            selectedVoucher = voucher;&#10;            notifyDataSetChanged();&#10;            if (listener != null) {&#10;                listener.onVoucherClick(voucher);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return vouchers.size();&#10;    }&#10;&#10;    static class VoucherViewHolder extends RecyclerView.ViewHolder {&#10;        RadioButton radioButton;&#10;        TextView tvTitle, tvDescription, tvDiscount, tvMaxDiscount, tvExpiry, tvMinOrder;&#10;        ImageView imgVoucher;&#10;&#10;        VoucherViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            radioButton = itemView.findViewById(R.id.radioButton);&#10;            tvTitle = itemView.findViewById(R.id.tvTitle);&#10;            tvDescription = itemView.findViewById(R.id.tvDescription);&#10;            tvDiscount = itemView.findViewById(R.id.tvDiscount);&#10;            tvMaxDiscount = itemView.findViewById(R.id.tvMaxDiscount);&#10;            tvExpiry = itemView.findViewById(R.id.tvExpiry);&#10;            tvMinOrder = itemView.findViewById(R.id.tvMinOrder);&#10;            imgVoucher = itemView.findViewById(R.id.imgVoucher);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.skymall.ui.voucher;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.skymall.R;&#10;import com.example.skymall.data.model.Voucher;&#10;import com.example.skymall.utils.MoneyFmt;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class VoucherSelectAdapter extends RecyclerView.Adapter&lt;VoucherSelectAdapter.VoucherViewHolder&gt; {&#10;&#10;    private List&lt;Voucher&gt; vouchers;&#10;    private Voucher selectedVoucher;&#10;    private OnVoucherClickListener listener;&#10;&#10;    public interface OnVoucherClickListener {&#10;        void onVoucherClick(Voucher voucher);&#10;    }&#10;&#10;    public VoucherSelectAdapter(List&lt;Voucher&gt; vouchers, Voucher selectedVoucher, OnVoucherClickListener listener) {&#10;        this.vouchers = vouchers;&#10;        this.selectedVoucher = selectedVoucher;&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void updateVouchers(List&lt;Voucher&gt; newVouchers) {&#10;        this.vouchers.clear();&#10;        this.vouchers.addAll(newVouchers);&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public VoucherViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_voucher_select, parent, false);&#10;        return new VoucherViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull VoucherViewHolder holder, int position) {&#10;        Voucher voucher = vouchers.get(position);&#10;&#10;        holder.tvDescription.setText(voucher.description);&#10;&#10;        // Format discount text&#10;        if (&quot;percentage&quot;.equals(voucher.discountType)) {&#10;            holder.tvDiscount.setText(&quot;Giảm &quot; + (int)voucher.discountValue + &quot;%&quot;);&#10;            if (voucher.maxDiscountAmount &gt; 0) {&#10;                holder.tvMaxDiscount.setText(&quot;Tối đa &quot; + MoneyFmt.format(voucher.maxDiscountAmount));&#10;                holder.tvMaxDiscount.setVisibility(View.VISIBLE);&#10;            } else {&#10;                holder.tvMaxDiscount.setVisibility(View.GONE);&#10;            }&#10;        } else {&#10;            holder.tvDiscount.setText(&quot;Giảm &quot; + MoneyFmt.format(voucher.discountValue));&#10;            holder.tvMaxDiscount.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Format expiry date&#10;        try {&#10;            SimpleDateFormat inputFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.getDefault());&#10;            SimpleDateFormat outputFormat = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#10;            Date expiryDate = inputFormat.parse(voucher.expiryDate);&#10;            holder.tvExpiry.setText(&quot;HSD: &quot; + outputFormat.format(expiryDate));&#10;        } catch (Exception e) {&#10;            holder.tvExpiry.setText(&quot;HSD: &quot; + voucher.expiryDate);&#10;        }&#10;&#10;        // Set minimum order text&#10;        if (voucher.minOrderAmount &gt; 0) {&#10;            holder.tvMinOrder.setText(&quot;Đơn tối thiểu &quot; + MoneyFmt.format(voucher.minOrderAmount));&#10;            holder.tvMinOrder.setVisibility(View.VISIBLE);&#10;        } else {&#10;            holder.tvMinOrder.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Hiển thị ảnh voucher nếu có&#10;        // Giả sử bạn đã thêm ImageView vào layout item_voucher_select.xml với id là imgVoucher&#10;        if (holder.imgVoucher != null) {&#10;            // Nếu Voucher có trường image, lấy link ảnh&#10;            String imgUrl = voucher.image;&#10;            if (imgUrl != null &amp;&amp; !imgUrl.isEmpty() &amp;&amp; !&quot;null&quot;.equals(imgUrl)) {&#10;                if (!imgUrl.startsWith(&quot;http&quot;)) {&#10;                    imgUrl = &quot;https://lequangthanh.click&quot; + imgUrl;&#10;                }&#10;                // Load ảnh bằng Picasso&#10;                com.squareup.picasso.Picasso.get().load(imgUrl).into(holder.imgVoucher);&#10;            } else {&#10;                // Sử dụng hình mặc định có sẵn trong Android: ic_launcher&#10;                holder.imgVoucher.setImageResource(R.drawable.ic_product_placeholder); // hình mặc định&#10;            }&#10;        }&#10;&#10;        // Set selection state&#10;        boolean isSelected = selectedVoucher != null &amp;&amp; selectedVoucher.id == voucher.id;&#10;        holder.radioButton.setChecked(isSelected);&#10;&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            selectedVoucher = voucher;&#10;            notifyDataSetChanged();&#10;            if (listener != null) {&#10;                listener.onVoucherClick(voucher);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return vouchers.size();&#10;    }&#10;&#10;    static class VoucherViewHolder extends RecyclerView.ViewHolder {&#10;        RadioButton radioButton;&#10;        TextView tvTitle, tvDescription, tvDiscount, tvMaxDiscount, tvExpiry, tvMinOrder;&#10;        ImageView imgVoucher;&#10;&#10;        VoucherViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            radioButton = itemView.findViewById(R.id.radioButton);&#10;            tvTitle = itemView.findViewById(R.id.tvTitle);&#10;            tvDescription = itemView.findViewById(R.id.tvDescription);&#10;            tvDiscount = itemView.findViewById(R.id.tvDiscount);&#10;            tvMaxDiscount = itemView.findViewById(R.id.tvMaxDiscount);&#10;            tvExpiry = itemView.findViewById(R.id.tvExpiry);&#10;            tvMinOrder = itemView.findViewById(R.id.tvMinOrder);&#10;            imgVoucher = itemView.findViewById(R.id.imgVoucher);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/circle_gray.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/circle_gray.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;#E0E0E0&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_close.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_close.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;@android:color/white&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_payment.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_payment.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvPaymentTitle&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Thanh toán&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_gravity=&quot;center_horizontal&quot;&#10;        android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;    &lt;!-- Thêm các thành phần hiển thị thông tin thanh toán tại đây --&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>